{"version":3,"sources":["Header.js","Footer.js","ImageDegrader.js","EditorSection.js","index.js"],"names":["Header","props","React","createElement","document","title","githubUrl","Footer","href","getImageFromData","data","Promise","resolve","image","Image","onload","src","async","getDegradedImage","imageData","degrade","resultWidth","width","resultHeight","height","firstPassScale","result","quality","canvas","ctx","getContext","fillRect","drawImage","toDataURL","processFirstPass","overlayAmount","colorBurnAmount","globalCompositeOperation","fillStyle","globalAlpha","processSecondPass","EditorSection","Component","constructor","super","this","state","degradedImageData","imageDataCache","loadSampleImage","handleImageLoad","size","imageSize","scale","Math","sqrt","parseInt","degrader","then","Map","set","setState","showDegradedImage","handleDragOver","event","preventDefault","handleDrop","dataTransfer","items","kind","file","getAsFile","loadImage","handleQualityChange","Number","target","value","cache","get","sampleImage","URL","reader","FileReader","e","readAsDataURL","showImageSelector","getElementById","click","render","className","onDragOver","onDrop","type","id","accept","onChange","files","onClick","alt","min","max","step","App","Fragment","ReactDOM"],"mappings":"gOAYeA,MATf,SAAgBC,GACd,OACEC,IAAAC,cAAA,cACED,IAAAC,cAAA,UAAKC,SAASC,OACdH,IAAAC,cAAA,SAAG,+QCJT,MAAMG,EAAY,8CAWHC,MATf,SAAgBN,GACd,OACEC,IAAAC,cAAA,cACED,IAAAC,cAAA,WACAD,IAAAC,cAAA,SAAG,WAAQD,IAAAC,cAAA,KAAGK,KAAMF,GAAYA,MCTtC,SAASG,EAAiBC,GACxB,OAAO,IAAIC,QAASC,IAClB,MAAMC,EAAQ,IAAIC,MAClBD,EAAME,OAAS,KACbH,EAAQC,IAEVA,EAAMG,IAAMN,IA0DTO,eAAeC,EAAiBC,EAAWC,GAChD,IAAKD,EAAW,MAAO,GAEvB,MAAMN,QAAcJ,EAAiBU,GAC/BE,EAAcR,EAAMS,MACpBC,EAAeV,EAAMW,OAErBC,EAAuC,IAArB,EAAIL,EAAU,KAAa,GACnD,IAAIM,EA1CN,SAA0Bb,EAAOc,EAASL,EAAOE,GAC/C,MAAMI,EAASxB,SAASD,cAAc,UACtCyB,EAAON,MAAQA,EACfM,EAAOJ,OAASA,EAEhB,MAAMK,EAAMD,EAAOE,WAAW,MAK9B,OAHAD,EAAIE,SAAS,EAAG,EAAGH,EAAON,MAAOM,EAAOJ,QACxCK,EAAIG,UAAUnB,EAAO,EAAG,EAAGe,EAAON,MAAOM,EAAOJ,QAEzCI,EAAOK,UAAU,aAAcN,GAgCzBO,CACXrB,GACC,IAAMO,GAAW,IAClBC,EAAcI,EAAgBF,EAAeE,GAS/C,OAPAC,EAlCF,SAA2Bb,EAAOsB,EAAeC,EAAiBT,EAASL,EAAOE,GAChF,MAAMI,EAASxB,SAASD,cAAc,UACtCyB,EAAON,MAAQA,EACfM,EAAOJ,OAASA,EAEhB,MAAMK,EAAMD,EAAOE,WAAW,MAa9B,OAZAD,EAAIG,UAAUnB,EAAO,EAAG,EAAGe,EAAON,MAAOM,EAAOJ,QAEhDK,EAAIQ,yBAA2B,UAC/BR,EAAIS,UAAY,QAChBT,EAAIU,YAAcJ,EAClBN,EAAIE,SAAS,EAAG,EAAGH,EAAON,MAAOM,EAAOJ,QAExCK,EAAIQ,yBAA2B,aAC/BR,EAAIS,UAAY,qBAChBT,EAAIU,YAAcH,EAClBP,EAAIE,SAAS,EAAG,EAAGH,EAAON,MAAOM,EAAOJ,QAEjCI,EAAOK,UAAU,aAAcN,GAgB7Ba,OACD/B,EAAiBiB,GACvBN,EAAU,IAAM,GAChBA,EAAU,KACT,IAAMA,GAAW,IAClBC,EAAaE,GAERG,EC9ET,MAAMe,UAAsBvC,IAAMwC,UAChCC,YAAY1C,GACV2C,MAAM3C,GAEN4C,KAAKC,MAAQ,CACX1B,QAAS,EACT2B,kBAAmB,KACnBC,eAAgB,MAGlBH,KAAKI,kBAGPC,gBAAgBxC,IDTXO,eAA4BE,EAAWgC,GAC5C,IAAKhC,EAAW,MAAO,GAEvB,MAAMN,QAAcJ,EAAiBU,GAC/BS,EAASxB,SAASD,cAAc,UAEhCiD,EAAYvC,EAAMS,MAAQT,EAAMW,OAChC6B,EAASF,EAAOC,EAAaE,KAAKC,KAAKJ,EAAOC,GAAa,EACjExB,EAAON,MAAQkC,SAAS3C,EAAMS,MAAQ+B,GACtCzB,EAAOJ,OAASgC,SAAS3C,EAAMW,OAAS6B,GAExC,MAAMxB,EAAMD,EAAOE,WAAW,MAM9B,OAJAD,EAAIS,UAAY,QAChBT,EAAIE,SAAS,EAAG,EAAGH,EAAON,MAAOM,EAAOJ,QACxCK,EAAIG,UAAUnB,EAAO,EAAG,EAAGe,EAAON,MAAOM,EAAOJ,QAEzCI,EAAOK,UAAU,aAAc,ICPpCwB,CAAsB/C,EAhBL,OAiBdgD,KAAMhC,IACL,MAAMsB,EAAiB,IAAIW,IAC3BX,EAAeY,IAAI,EAAGlC,GAEtBmB,KAAKgB,SAAS,CACZzC,QAAS,EACT2B,kBAAmBrB,EACnBsB,eAAgBA,GACf,IAAMH,KAAKiB,kBAAkBjB,KAAKC,MAAM1B,YAIjD2C,eAAeC,GACbA,EAAMC,iBAGRC,WAAWF,GAGT,GAFAA,EAAMC,iBAEmC,SAArCD,EAAMG,aAAaC,MAAM,GAAGC,KAAiB,CAC/C,MAAMC,EAAON,EAAMG,aAAaC,MAAM,GAAGG,YACzC1B,KAAK2B,UAAUF,IAInBG,oBAAoBT,GAClBnB,KAAKgB,SAAS,CACZzC,QAASsD,OAAOV,EAAMW,OAAOC,QAC5B,IAAM/B,KAAKiB,kBAAkBjB,KAAKC,MAAM1B,UAG7C0C,kBAAkB1C,GAChB,MAAMyD,EAAQhC,KAAKC,MAAME,eAAe8B,IAAI1D,GACxCyD,EACFhC,KAAKgB,SAAS,CACZd,kBAAmB8B,IAKvBpB,EAA0BZ,KAAKC,MAAME,eAAe8B,IAAI,GAAI1D,GACzDsC,KAAMhC,IACL,MAAMsB,EAAiB,IAAIW,IAAId,KAAKC,MAAME,gBAC1CA,EAAeY,IAAIxC,EAASM,GAE5BmB,KAAKgB,SAAS,CACZd,kBAAmBrB,EACnBsB,eAAgBA,MAKxBC,kBACE,MAAM8B,EAAc,IAAIjE,MACxBiE,EAAYhE,OAAS,KACnB,MAAMa,EAASxB,SAASD,cAAc,UACtCyB,EAAON,MAAQ,IACfM,EAAOJ,OAAS,IACJI,EAAOE,WAAW,MAC1BE,UAAU+C,EAAa,EAAG,EAAGnD,EAAON,MAAOM,EAAOJ,QAEtDqB,KAAKK,gBAAgBtB,EAAOK,UAAU,cAAe,IAEvD8C,EAAY/D,IAAMZ,SAAS4E,IAAM,cAGnCR,UAAUF,GACR,IAAKA,EAAM,OAEX,MAAMW,EAAS,IAAIC,WACnBD,EAAOlE,OAAUoE,GAAMtC,KAAKK,gBAAgBiC,EAAER,OAAOjD,QACrDuD,EAAOG,cAAcd,GAGvBe,oBACmBjF,SAASkF,eAAe,iBAChCC,QAGXC,SACE,OACEtF,IAAAC,cAAA,WAASsF,UAAU,cACjBC,WAAa1B,GAAUnB,KAAKkB,eAAeC,GAC3C2B,OAAS3B,GAAUnB,KAAKqB,WAAWF,IAEnC9D,IAAAC,cAAA,OAAKsF,UAAU,mBACbvF,IAAAC,cAAA,SAAOyF,KAAK,OAAOC,GAAG,gBAAgBC,OAAO,UAC3CC,SAAW/B,GAAUnB,KAAK2B,UAAUR,EAAMW,OAAOqB,MAAM,MAEzD9F,IAAAC,cAAA,SAAOyF,KAAK,SAAShB,MAAM,8CACzBqB,QAASA,IAAMpD,KAAKwC,uBAIxBnF,IAAAC,cAAA,OAAKsF,UAAU,QAAQS,IAAI,wCACzBlF,IAAK6B,KAAKC,MAAMC,oBAGlB7C,IAAAC,cAAA,SAAOyF,KAAK,QACVO,IAAI,IAAIC,IAAI,MAAMC,KAAK,IACvBzB,MAAO/B,KAAKC,MAAM1B,QAClB2E,SAAW/B,GAAUnB,KAAK4B,oBAAoBT,OAOzCvB,QC1Hf,SAAS6D,EAAIrG,GACX,OACEC,IAAAC,cAAAD,IAAAqG,SAAA,KACErG,IAAAC,cAACH,EAAM,MACPE,IAAAC,cAACsC,EAAa,MACdvC,IAAAC,cAACI,EAAM,OAKbiG,IAAShB,OACPtF,IAAAC,cAACmG,EAAG,MACJlG,SAASkF,eAAe,W","file":"static/js/main.56a90cfb.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Header(props) {\n  return (\n    <header>\n      <h1>{document.title}</h1>\n      <p>디지털 풍화를 좋아하시는 여러분을 위한 페이지입니다. 저화질의 이미지를 쉽고 빠르게 만들어 보세요!</p>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst githubUrl = \"https://github.com/juo6442/weathering-image\";\n\nfunction Footer(props) {\n  return (\n    <footer>\n      <hr />\n      <p>GitHub: <a href={githubUrl}>{githubUrl}</a></p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","function getImageFromData(data) {\n  return new Promise((resolve) => {\n    const image = new Image();\n    image.onload = () => {\n      resolve(image);\n    };\n    image.src = data;\n  });\n}\n\nexport async function fitImageSize(imageData, size) {\n  if (!imageData) return \"\";\n\n  const image = await getImageFromData(imageData);\n  const canvas = document.createElement(\"canvas\");\n\n  const imageSize = image.width * image.height;\n  const scale = (size < imageSize) ? Math.sqrt(size / imageSize) : 1;\n  canvas.width = parseInt(image.width * scale);\n  canvas.height = parseInt(image.height * scale);\n\n  const ctx = canvas.getContext(\"2d\");\n\n  ctx.fillStyle = \"white\";\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n\n  return canvas.toDataURL(\"image/jpeg\", 1);\n}\n\nfunction processFirstPass(image, quality, width, height) {\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = width;\n  canvas.height = height;\n\n  const ctx = canvas.getContext(\"2d\");\n\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n\n  return canvas.toDataURL(\"image/jpeg\", quality);\n}\n\nfunction processSecondPass(image, overlayAmount, colorBurnAmount, quality, width, height) {\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = width;\n  canvas.height = height;\n\n  const ctx = canvas.getContext(\"2d\");\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n\n  ctx.globalCompositeOperation = \"overlay\";\n  ctx.fillStyle = \"black\";\n  ctx.globalAlpha = overlayAmount;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  ctx.globalCompositeOperation = \"color-burn\";\n  ctx.fillStyle = \"rgb(230, 225, 170)\";\n  ctx.globalAlpha = colorBurnAmount;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  return canvas.toDataURL(\"image/jpeg\", quality);\n}\n\nexport async function getDegradedImage(imageData, degrade) {\n  if (!imageData) return \"\";\n\n  const image = await getImageFromData(imageData);\n  const resultWidth = image.width;\n  const resultHeight = image.height;\n\n  const firstPassScale = (1 - degrade / 100) * 0.5 + 0.5;\n  let result = processFirstPass(\n    image,\n    (100 - degrade) / 100,\n    resultWidth * firstPassScale, resultHeight * firstPassScale);\n\n  result = processSecondPass(\n    await getImageFromData(result),\n    degrade / 100 * 0.1,\n    degrade / 100,\n    (100 - degrade) / 100,\n    resultWidth, resultHeight);\n\n  return result;\n}\n","import React from \"react\";\nimport * as degrader from \"./ImageDegrader\";\nimport \"./style.css\";\n\nconst maxImageSize = 1500 * 1500;\n\nclass EditorSection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      degrade: 0,\n      degradedImageData: null,\n      imageDataCache: null,\n    };\n\n    this.loadSampleImage();\n  }\n\n  handleImageLoad(data) {\n    degrader.fitImageSize(data, maxImageSize)\n      .then((result) => {\n        const imageDataCache = new Map();\n        imageDataCache.set(0, result);\n\n        this.setState({\n          degrade: 0,\n          degradedImageData: result,\n          imageDataCache: imageDataCache,\n        }, () => this.showDegradedImage(this.state.degrade));\n      });\n  }\n\n  handleDragOver(event) {\n    event.preventDefault();\n  }\n\n  handleDrop(event) {\n    event.preventDefault();\n\n    if (event.dataTransfer.items[0].kind === \"file\") {\n      const file = event.dataTransfer.items[0].getAsFile();\n      this.loadImage(file);\n    }\n  }\n\n  handleQualityChange(event) {\n    this.setState({\n      degrade: Number(event.target.value),\n    }, () => this.showDegradedImage(this.state.degrade));\n  }\n\n  showDegradedImage(degrade) {\n    const cache = this.state.imageDataCache.get(degrade);\n    if (cache) {\n      this.setState({\n        degradedImageData: cache,\n      });\n      return;\n    }\n\n    degrader.getDegradedImage(this.state.imageDataCache.get(0), degrade)\n      .then((result) => {\n        const imageDataCache = new Map(this.state.imageDataCache);\n        imageDataCache.set(degrade, result);\n\n        this.setState({\n          degradedImageData: result,\n          imageDataCache: imageDataCache,\n        });\n      });\n  }\n\n  loadSampleImage() {\n    const sampleImage = new Image();\n    sampleImage.onload = () => {\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 400;\n      canvas.height = 400;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(sampleImage, 0, 0, canvas.width, canvas.height);\n\n      this.handleImageLoad(canvas.toDataURL(\"Image/jpeg\"), 1);\n    }\n    sampleImage.src = document.URL + \"/sample.png\";\n  }\n\n  loadImage(file) {\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => this.handleImageLoad(e.target.result);\n    reader.readAsDataURL(file);\n  }\n\n  showImageSelector() {\n    const selector = document.getElementById(\"imageSelector\");\n    selector.click();\n  }\n\n  render() {\n    return (\n      <section className=\"imageEditor\"\n        onDragOver={(event) => this.handleDragOver(event)}\n        onDrop={(event) => this.handleDrop(event)}\n      >\n        <div className=\"buttonContainer\">\n          <input type=\"file\" id=\"imageSelector\" accept=\"image/*\"\n            onChange={(event) => this.loadImage(event.target.files[0])}\n          />\n          <input type=\"button\" value=\"이미지 불러오기\"\n            onClick={() => this.showImageSelector()}\n          />\n        </div>\n\n        <img className=\"image\" alt=\"불러온 이미지\"\n          src={this.state.degradedImageData}\n        />\n\n        <input type=\"range\"\n          min=\"0\" max=\"100\" step=\"5\"\n          value={this.state.degrade}\n          onChange={(event) => this.handleQualityChange(event)}\n        />\n      </section>\n    );\n  }\n}\n\nexport default EditorSection;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport EditorSection from \"./EditorSection\";\nimport \"./style.css\";\n\nfunction App(props) {\n  return (\n    <>\n      <Header />\n      <EditorSection />\n      <Footer />\n    </>\n  );\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}